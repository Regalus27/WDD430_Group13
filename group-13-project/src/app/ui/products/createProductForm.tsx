'use client';

import { createProduct } from "@/lib/actions";
import CreateCategorySelect from "./categorySelect";
import { fetchProductCategories } from "@/lib/data";
import ImageUploadComponent from "../imageForm/imageUploadComponent";

export default function CreateProductForm() {
    /**
        product_id: string;         // Autogenerated, omit
        user_id: string;            // Passed in (requires auth)
        product_name: string;       // User Value
        price_in_cents: number;     // User Value (convert to cents)
        category: string;           // User Value
        description: string;        // User Value
        image_url: string;          // User Value (requires Image thing I haven't built)
        created_at: Date;           // Generated on item creation, omit
     */
    // test user id until authentication lets us grab user id
    const user_id = '891ccb08-e0b6-4aba-a439-33154b58dff0';
    const createProductWithId = createProduct.bind(null, user_id);
    const defaultCategory = fetchProductCategories()[0];

    const handleSubmit = (formData: FormData) => {
        if (!formData) {
            return;
        }
        // filesize validation
        // Yes these are bad ways to send user feedback maybe I'll change them to something if I magically get time
        const imageFile: File = formData.get('image') as File;
        if (imageFile) {
            if (imageFile.type.split('/')[0] !== 'image') {
                alert("Image must be an image.");
                return;
            }
            if (imageFile.size / 1024 / 1024 > 500) {
                alert("Image must be less than 500MB.");
                return;
            }
        }
        createProductWithId(formData);
    }

    return (
        <form action={handleSubmit} id="create_form" className="max-w-sm mx-auto">
            <div className="mb-5">
                <label htmlFor="product_name" className="block mb-2 text-sm font-medium text-gray-900">Product Name</label>
                <input type="text" name="product_name" id="product_name" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required />
            </div>
            <div className="mb-5">
                <label htmlFor="price_in_cents" className="block mb-2 text-sm font-medium text-gray-900">Price ($)</label>
                <input type="number" name="price_in_cents" step="0.01" min="0.01" id="price_in_cents" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required />
            </div>
            <div className="mb-5">
                <label htmlFor="category" className="block mb-2 text-sm font-medium text-gray-900">Category</label>
                <CreateCategorySelect defaultCategory={defaultCategory}></CreateCategorySelect>
            </div>
            <div className="mb-5">
                <label htmlFor="description" className="block mb-2 text-sm font-medium text-gray-900">Description</label>
                <textarea name="description" id="description" rows={9} className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required />
            </div>
            <ImageUploadComponent></ImageUploadComponent>
            <button type="submit" className="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center">Submit</button>
        </form>
    );
}